@model IDGS903_Tema1.Models.Triangulo

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Triangulo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(model => model.x1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.x1, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.x1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-6">
                @Html.LabelFor(model => model.y1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.y1, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.y1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(model => model.x2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.x2, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.x2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-6">
                @Html.LabelFor(model => model.y2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.y2, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.y2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(model => model.x3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.x3, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.x3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-6">
                @Html.LabelFor(model => model.y3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.y3, new { htmlAttributes = new { @class = "form-control", step = "any" } })
                    @Html.ValidationMessageFor(model => model.y3, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="calcular" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@if (ViewBag.Respuesta != null)
{
<div>
    <h1>Hola</h1>
    <h3>@Html.DisplayFor(model => Model.res)</h3>
    <h3> medida lado1: @Html.DisplayFor(model => Model.lado1)</h3>
    <h3> medida lado2: @Html.DisplayFor(model => Model.lado2)</h3>
    <h3> medida lado3: @Html.DisplayFor(model => Model.lado3)</h3>
    <h3>Area: @Html.DisplayFor(model => Model.area)</h3>
</div>
}

